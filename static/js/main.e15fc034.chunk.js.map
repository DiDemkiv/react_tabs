{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onTabSelected","selectedTabId","correctTabId","find","tab","id","className","map","classNames","href","onClick","event","preventDefault","title","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAeH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,KAC7CA,EACAF,EAAK,GAAGM,GAEZ,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACEE,UACEE,IAAW,CAAE,YAAaJ,EAAIC,KAAOH,IAEvC,UAAQ,MAJV,SAOE,mBACEO,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QACE,SAACC,GACCA,EAAMC,iBACFV,IAAiBE,EAAIC,IACvBL,EAAcI,IAPtB,SAYGA,EAAIS,SAdFT,EAAIC,WAqBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,UACIP,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,MAAiBH,EAAK,IAAIe,cC3CnDf,EAAc,CACzB,CAAEM,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASjB,EAAK,IAApD,mBAAOkB,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKZ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBW,EAAYJ,SAGlC,cAAC,EAAD,CACEd,KAAMA,EACNC,cAAekB,EACfjB,cAAegB,EAAYZ,SCtBnCc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e15fc034.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  onTabSelected,\n  selectedTabId,\n}) => {\n  const correctTabId = tabs.find(tab => tab.id === selectedTabId)\n    ? selectedTabId\n    : tabs[0].id;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={\n                classNames({ 'is-active': tab.id === correctTabId })\n              }\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={\n                  (event) => {\n                    event.preventDefault();\n                    if (correctTabId !== tab.id) {\n                      onTabSelected(tab);\n                    }\n                  }\n                }\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {(tabs.find(tab => tab.id === correctTabId) || tabs[0]).content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        onTabSelected={setSelectedTab}\n        selectedTabId={selectedTab.id}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}